import { Listbox, Transition } from '@headlessui/react';
import React, { useState, Fragment, useEffect } from 'react';
import { summary } from '../assets/data';
import { BsChevronExpand } from 'react-icons/bs';
import { MdCheck } from 'react-icons/md';
import { getInitials } from '../utils';
import clsx from 'clsx';
import { useListQuery } from '../redux/slices/ActionApiSlice';
import Loading from './Loading';

const UserList = ({ team, setTeam }) => {
  // const data = summary.users;
  const {data, isLoading} = useListQuery()
  const [selectedUsers, setSelectedUsers] = useState([]);

  const handleChange = (el) => {
    console.log(el, 'el')
    setSelectedUsers(el);
    setTeam(el?.map((item) => item._id));
  };

  useEffect(() => {
    if(team.length < 1 ) {
      // data && setSelectedUsers([data.users[0]]);
    } else {
      setSelectedUsers(team)
      console.log(team)
    }
  },[isLoading, data])
  
  return isLoading ? <Loading/> :(
    <div>
      <p className=" text-gray-700">Assign to:</p>
      <Listbox value={selectedUsers} onChange={handleChange} multiple>
        <div className="relative mt-1">
          <Listbox.Button className="relative w-full cursor-default rounded bg-white pl-3 pr-10 text-left px-3 py-2.5 2xl:py-3 border border-gray-500 sm:text-sm">
            <span>{selectedUsers.map((users) => users.name).join(', ')}</span>

            <span className="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2">
              <BsChevronExpand className="h-5 w-5 text-gray-400" aria-hidden="true" />
            </span>
          </Listbox.Button>

          <Transition 
            as={Fragment} 
            leave="transition ease-in duration-100" 
            leaveFrom="opacity-100" leaveTo="opacity-0"
          >
            <Listbox.Options className="z-50 absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-white   py-1 text-base shadow-lg ring-1 ring-black/5 focus:outline-none sm:text-sm overflow-y-auto">
              {data?.users?.map((user, index) => { const item = team.find(el => user._id == el._id); return (

                <Listbox.Option 
                key={index} 
                className={({ active, selected }) => `relative cursor-default select-none py-2 pl-10 pr-4. ${active ? 'bg-amber-100 text-amber-900' : 'text-gray-500'} ${selected ? 'text-red-900' : ''} `} 
                value={item ? item : user} 
                >
                  {({ selected }) => (
                    <>
                      <div className={clsx('flex items-center gap-2  truncate', selected ? 'font-medium' : 'font-normal')}>
                        <div className="w-6 h-6 rounded-full text-white flex items-center justify-center bg-violet-600">
                          <span className="text-center text-[10px]">{getInitials(user.name)}</span>
                        </div>
                        <span>{user.name}</span>
                      </div>
                      {selected ? (
                        <span className="absolute inset-y-0 left-0 flex items-center pl-3 text-amber-600">
                          <MdCheck className="h-5 w-5" aria-hidden="true" />
                        </span>
                      ) : null}
                    </>
                  )}
                </Listbox.Option>
            )
              })}
            </Listbox.Options>
          </Transition>
        </div>
      </Listbox>
    </div>
  );
};

export default UserList;
